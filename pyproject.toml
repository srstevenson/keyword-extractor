[tool.poetry]
name = "keyword-extractor"
version = "0.1.0"
description = "Extract keywords from documents with spaCy and scikit-learn"
authors = ["Scott Stevenson <scott@stevenson.io>"]
license = "MIT"

[tool.poetry.scripts]
keyword-extractor = "keyword_extractor:main"

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
scikit-learn = ">=1.1"
spacy = ">=3.4.1"
tabulate = ">=0.8.10"

[tool.poetry.group.dev.dependencies]
mypy = ">=0.981"
poethepoet = ">=0.22.0"
pytest = ">=7.1.3"
pytest-cov = ">=4.0.0"
ruff = ">=0.1.6"
types-tabulate = ">=0.8.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_also = [
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
strict = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "sklearn.feature_extraction.text"
ignore_missing_imports = true

[tool.poe.tasks]
_ruff_fix = "ruff --fix ."
_ruff_fmt = "ruff format ."
fmt = ["_ruff_fix", "_ruff_fmt"]

_ruff_fmt_check = "ruff format --check ."
_ruff_check = "ruff ."
_mypy = "mypy ."
lint = ["_ruff_fmt_check", "_ruff_check", "_mypy"]

test = "pytest tests"
check = ["lint", "test"]

[tool.pytest.ini_options]
addopts = "--cov=keyword_extractor --cov-report=term-missing"

[tool.ruff]
target-version = "py310"
select = ["ALL"]
ignore = ["COM812", "D203", "D213", "INP001", "ISC001", "PLR2004", "S101", "T201"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.isort]
split-on-trailing-comma = false
